apiVersion: v1
items:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: ddh-auth
      template: postgresql-persistent-template
    name: ddh-auth
  stringData:
    database-name: ddh_auth
    database-password: TODO
    database-user: TODO
    django-secret: TODO

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      description: Build config for ddh_auth application
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: ddh-auth
    name: ddh-auth
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ddh-auth:latest
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/johnbradley/ddh_auth.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
      type: Docker
    triggers:
    - type: ConfigChange

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the ddh_auth app
    generation: 1
    labels:
      app: ddh-auth
    name: ddh-auth
  spec:
    lookupPolicy:
      local: true

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: ddh-auth Deployment
      template.alpha.openshift.io/wait-for-ready: "true"
    generation: 1
    labels:
      app: ddh-auth
    name: ddh-auth
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ddh-auth
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ddh-auth
        name: ddh-auth
      spec:
        containers:
        - env:
          - name: DJANGO_ALLOWED_HOSTS
            value: '*'
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: django-secret
                name: ddh-auth
          - name: DDH_AUTH_DB_HOST
            value: postgresql.john.svc
          - name: DDH_AUTH_DB_NAME
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ddh-auth
          - name: DDH_AUTH_DB_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ddh-auth
          - name: DDH_AUTH_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ddh-auth
          image: ddh-auth:latest
          imagePullPolicy: Always
          name: ddh-auth
          ports:
          - containerPort: 8000
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ddh-auth
    name: ddh-auth
  spec:
    ports:
    - name: ddh-auth-service
      port: 80
      protocol: TCP
      targetPort: 8000
    selector:
      app: ddh-auth
    sessionAffinity: None
    type: ClusterIP

kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
